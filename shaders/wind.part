uniform float time   = 0.0;
uniform float wind_x = 0.0;
uniform float wind_y = 0.0;
uniform sampler2D wind_noise_tex;

float get_wind_delta(in vec3 vertex, in float flex_comp) {
	float tx  = (-time*wind_x + 1.2*vertex.x);
	float ty  = (-time*wind_y + 1.2*vertex.y);
	float mag = texture2DLod(wind_noise_tex, vec2(tx, ty), 1).r;
	float flexibility = 0.75*flex_comp + 0.25; // burned grass/leaves are less flexible
	return flexibility * mag;
}

vec3 get_grass_wind_delta(in vec3 vertex, in float height) {
	float motion_val = clamp((1.5 - 2.0*gl_TexCoord[0].s), 0.0, 1.0); // 1.0 for top vertex, 0.0 for bottom vertices
	// Note: grass motion amplitude should depend on dot(wind, gl_Normal), but the normal is incorrect
	float delta = get_wind_delta(vertex, gl_Color.g) * height * motion_val;
	// apply x/y delta but maintain the existing height
	vec3 v = normalize(vec3(delta*wind_x, delta*wind_y, height)) * height;
	v.z   -= height;
	return v;
}
