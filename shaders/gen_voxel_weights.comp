layout (local_size_x = 16, local_size_y = 16) in;

uniform vec3 offset, scale;
uniform float start_mag, start_freq, rx, ry, zval;
uniform writeonly image2D dest_tex;

void main()
{
	float vx   = float(gl_GlobalInvocationID.x)/(gl_WorkGroupSize.x*gl_NumWorkGroups.x);
	float vy   = float(gl_GlobalInvocationID.y)/(gl_WorkGroupSize.y*gl_NumWorkGroups.y);
	vec3 pos   = offset + scale*vec3(vx, vy, zval);
	float val  = 0.0;
	float mag  = start_mag;
	float freq = start_freq;
	float crx  = rx;
	float cry  = ry;
	const float lacunarity = 1.92;
	const float gain       = 0.5;
	const int NUM_OCTAVES  = 5;

	for (int i = 0; i < NUM_OCTAVES; ++i) {
		float noise = simplex(freq*pos + vec3(crx, cry, crx-cry));
		val  += mag*noise;
		mag  *= gain;
		freq *= lacunarity;
		crx  *= 1.5;
		cry  *= 1.5;
	}
	ivec2 store_pos = ivec2(gl_GlobalInvocationID.xy);
	imageStore(dest_tex, store_pos, vec4(val, 0.0, 0.0, 0.0)); // only red channel is used
}
