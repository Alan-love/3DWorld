uniform sampler3D cloud_noise_tex;
uniform float time = 0.0;
uniform float noise_scale = 1.0;

float gen_cloud_alpha(in vec3 pos)
{
	vec3 ftime  = vec3(fract(time), fract(0.95*time), fract(0.85*time));
	float alpha = 0.0;
	float freq  = 1.0;

	for (int i = 0; i < NUM_OCTAVES; ++i) {
		alpha += texture3D(cloud_noise_tex, noise_scale*(freq*pos + ftime)).r/freq;
		freq  *= 2.0;
	}
	return clamp(2.0*(0.5*alpha-0.4), 0.0, 1.0);
}
